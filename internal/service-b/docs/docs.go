// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/data": {
            "get": {
                "description": "Get sensor data by ID and timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sensor"
                ],
                "summary": "Fetch sensor data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID1",
                        "name": "id1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID2",
                        "name": "id2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Time",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Time",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.SensorData"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update sensor data by ID and timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sensor"
                ],
                "summary": "Update sensor data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID1",
                        "name": "id1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID2",
                        "name": "id2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Time",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Time",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "description": "Sensor Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SensorDataUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete sensor data by ID and timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sensor"
                ],
                "summary": "Delete sensor data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID1",
                        "name": "id1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID2",
                        "name": "id2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Time",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Time",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.SensorData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "id1": {
                    "type": "string"
                },
                "id2": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "domain.SensorDataUpdateReq": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Microservice B API",
	Description:      "This is the API documentation for Microservice B",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
